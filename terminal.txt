0. Первичная настройка.
  - проверяем есть ли в каталоге пользователя папка .ssh;
  - сгенерируем SSH ключ, выполнив:
    ssh-keygen
  - публичный ключ скопируем на удаленный репозиторий для дальнейшего подключения к нему:
    cat .ssh/id_rsa.pub
  - укажем имя и почту пользователя, выполнив:
    git config --global user.email seach@inbox.ru
    git config --global user.name 'Sergey Shchanikov'
  - можно проверить версию git и настройки:
    git --version
    git config --list

1. Создание нового репозитория проекта.
  - создаем папку на диске, в которой будут лежать файлы программ проекта;
  - в терминале, находясь в этой папке нужно создать новый репозиторий, выполнив:
    git init
  - проверим статус файлов в репозитории, выполнив:
    git status
  - если есть файлы или каталоги, которые мы не хотим включать в репозиторий, то нужно создать в папке файл .gitignore
    и в него добавить путь к ним, например с помощью редактора vi (i-вводим __pycache*-Esc-:wq) 
  - добавляем все файлы в репозиторий:
    git add -A
  - проверим еще раз статус файлов в репозитории, выполнив:
    git status
  - делаем первый комит:
    git commit -m "my first commit"
  - создаем удаленный репозиторий на сайтах https://github.com или https://bitbucket.org;
  - копируем для него адрес SSH;
  - добавляем ссылку на удаленный репозиторий:
    git remote add origin git@github.com:neurocomputer/remember.git
  - "заталкиваем" туда наш репозиторий:
    git push -u origin master
  - проверим еще раз статус файлов в репозитории, выполнив:
    git status

2.Работа с созданным репозиторием проекта (на данном компьютере).
- вносим изменения в проект;
- в терминале, находясь в этой папке, проверим статус файлов в репозитории, выполнив:
  git status
- можем просмотреть изменения выполнив:
  git diff
- проверяем не появились ли новые файлы которые нужно игнорировать, добавляем их в .gitignore;
- нужно добавить в репозиторий изменения (новые файлы, новые блоки или строки в файлах) и сделать комит, выполнив:
  если есть новые файлы:
    git add <имя файла> для отдельных файлов
    git add -A добавить все файлы
    git commit -m "add new script"
  если изменения произведены в уже имеющихся в репозитории файлах, то можно сразу делать комит с параметром -am:
    git commit -am "change old script"
- если не хотим добавлять изменения, нужно выполнить:
  git checkout <имя файла> отбросить локальные изменения
  git reset --hard отбросить все локальные изменения
- проверим еще раз статус файлов в репозитории, выполнив:
  git status
- "заталкиваем" в удаленный репозиторий изменения:
  git push origin master
- проверим еще раз статус файлов в репозитории, выполнив:
  git status
- можно проверить все комиты, выполнив:
  git log

3.Работа с созданным репозиторием проекта (на данном компьютере), но изменения вносились на удаленном репозитории.
- просмотреть адреса удаленных репозиториев
  git remote -v
- проверить, были ли комиты на удаленном репозитории можно выполнив:
  git fetch
  git status
- загрузить себе последнюю версию из удаленного репозитория можно выполнив:
  git pull origin master
- проверим еще раз статус файлов в репозитории, выполнив:
  git status
  
4.Создание локального репозитория (на данном компьютере) из удаленного.
  
Дополнительные возможности.  
  - удалить ссылку по имени:
    git remote remove <имя>
  - переименовывать ссылку:
    git remote rename <старое_имя> <новое_имя>
  - для перемещения по истории использовать команду:
    git checkout
  - вернуться на 1 коммит назад (от головы):
    git checkout HEAD~1
